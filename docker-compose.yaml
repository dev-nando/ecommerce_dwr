version: "3.2"
services:
  db:
    image: postgres
    volumes:
      - "${PERSISTING_DB_FOLDER}:/var/lib/postgres/data"
    environment:
      - "POSTGRES_DB=${POSTGRES_DB}"
      - "POSTGRES_USER=${POSTGRES_USER}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"
    networks:
      - db-net
    restart: unless-stopped
    ports:
      - 5432:5432
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    user: "${UID}:${GID}"
    volumes:
      - "${PERSISTING_PG_ADMIN_FOLDER}:/var/lib/pgadmin"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
      # PGADMIN_LISTEN_PORT: "80"
    networks:
      - db-net
    depends_on:
      - "db"
    ports:
      - "5050:80"
  backend:
    build: "${BACK_END_PROJECT_FOLDER}"
    environment:
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "8000:8000"
    volumes:
      - "${BACK_END_PROJECT_FOLDER}:/var/backend"
    command: bash -c "python manage.py migrate && 
      \ python manage.py initadmin $DJANGO_SUPERUSER_USERNAME $DJANGO_SUPERUSER_EMAIL $DJANGO_SUPERUSER_PASSWORD && 
      \ python manage.py makemigrations && 
      \ python manage.py migrate && 
      \ python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - "pgadmin"
    networks:
      - db-net
  frontend:
    build: "${FRONT_END_PROJECT_FOLDER}"
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - "${FRONT_END_PROJECT_FOLDER}:/var/frontend"
      - /var/frontend/node_modules
    command: bash -c "npm start"
    depends_on:
      - "backend"
    networks:
      - db-net

networks:
  db-net:
    driver: bridge